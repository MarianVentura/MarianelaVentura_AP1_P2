@page "/Registros/Index"
@using MarianelaVentura_AP1_P2.Models
@using MarianelaVentura_AP1_P2.Service
@inject RegistroServices registrosServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Index Registros</PageTitle>
<div class="container">
    <div class="shadow-lg">
        <div class="card-header bg-primary text-white">
            <div class="text-center">
                <h2><strong>Registro...</strong></h2>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-3">
                    <label class="col-form-label"><strong>Filtrar por</strong></label>
                </div>
                <div class="col-3">
                    <label class="form-label"><strong>Buscar</strong></label>
                </div>
            </div>

            <div class="row">
                <div class="col-3">
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="">Elija una opción</option>
                        <option value="ID">ID</option>
                    </InputSelect>
                </div>
                <div class="col-3">
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltrado" placeholder="Buscar" />
                        <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"> Buscar</button>
                    </div>
                </div>
                <div class="col-3">
                    <button type="button" class="btn btn-outline-secondary bi bi-arrow-clockwise" @onclick="Restablecer"></button>
                </div>
                <div class="col text-end">
                    <a href="Registros/Create">
                        <button type="button" class="btn btn-success bi bi-pencil-square"> Crear</button>
                    </a>
                </div>
            </div>

            <table class="table table-bordered text-center mt-4">
                <thead class="bg-primary text-white">
                    <tr>
                        <th>RegistroId</th>
                        <th>Observar</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var registro in ListarRegistros)
                    {
                        <tr>
                            <td>@registro.RegistroId</td>
                            <td>
                                <a href="Registros/Details/@registro.RegistroId" class="btn btn-outline-primary">
                                    <span class="bi bi-eye-fill"></span>
                                </a>
                            </td>
                            <td>
                                <a href="Registros/Edit/@registro.RegistroId" class="btn btn-outline-success">
                                    <span class="bi bi-pen"></span>
                                </a>
                            </td>
                            <td>
                                <a href="Registros/Delete/@registro.RegistroId" class="btn btn-outline-danger">
                                    <span class="bi bi-trash"></span>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="card-footer">
            <p><strong>Cantidad de Registros:</strong> @ListarRegistros.Count</p>
        </div>
    </div>
</div>

@code {
    public List<Registro> ListarRegistros { get; set; } = new List<Registro>();
    public string ValorFiltrado { get; set; } = string.Empty;
    public string Filtro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListarRegistros = await registrosServices.Listar(r => true);
    }

    public async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(ValorFiltrado))
        {
            if (Filtro == "ID" && int.TryParse(ValorFiltrado, out int registroId))
                ListarRegistros = await registrosServices.Listar(r => r.RegistroId == registroId);
        }
        else
        {
            ListarRegistros = await registrosServices.Listar(r => true);
        }
    }

    public async Task Restablecer()
    {
        ListarRegistros = await registrosServices.Listar(r => true);
        ValorFiltrado = string.Empty;
        Filtro = string.Empty;
    }
}
